// Jenkinsfile for MLBParks
podTemplate(
  label: "skopeo-pod",
  cloud: "openshift",
  inheritFrom: "maven",
  containers: [
    containerTemplate(
      name: "jnlp",
      image: "docker-registry.default.svc:5000/${GUID}-jenkins/jenkins-slave-appdev",
      resourceRequestMemory: "1Gi",
      resourceLimitMemory: "2Gi",
      resourceRequestCpu: "500m",
      resourceRequestCpu: "1"
    )
  ]
) {
  node('skopeo-pod') {
    echo "GUID: ${GUID}"
    echo "CLUSTER: ${CLUSTER}"
    def appname = "MLBParks"
    // Your Pipeline Code goes here. Make sure to use the ${GUID} and ${CLUSTER} parameters where appropriate
    // You need to build the application in directory `MLBParks`.
    // Also copy "../nexus_settings.xml" to your build directory
    // and replace 'GUID' in the file with your ${GUID} to point to >your< Nexus instance
   
    stage ('Get Source Code Repo'){
      echo "cloning repo"
      git '${REPO}'
    }

    def mvnCmd = "mvn -s ./nexus_settings.xml"
    def groupId = getGroupIdFromPom("./${appname}/pom.xml")
    def artifactId = getArtifactIdFromPom("./${appname}/pom.xml")
    def version = getVersionFromPom("./${appname}/pom.xml")
    def devTag = "${version}-${BUILD_NUMBER}"
    def prodTag = "${version}"

    stage ('Build Artifact'){
      echo "Building java war version"
      sh "${mvnCmd} -f ./${appname}/pom.xml -DskipTests clean package"
    }





    
 
  }
}

// Convenience Functions to read variables from the pom.xml
// Do not change anything below this line.
def getVersionFromPom(pom) {
  def matcher = readFile(pom) =~ '<version>(.+)</version>'
  matcher ? matcher[0][1] : null
}
def getGroupIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<groupId>(.+)</groupId>'
  matcher ? matcher[0][1] : null
}
def getArtifactIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<artifactId>(.+)</artifactId>'
  matcher ? matcher[0][1] : null
}
